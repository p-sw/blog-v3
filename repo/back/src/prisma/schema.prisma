// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Locale {
  EN
  KO
}

model PostLocaled {
  locale Locale
  postId Int
  post   Post   @relation(fields: [postId], references: [id], onDelete: Cascade)

  title   String @unique
  short   String
  content String

  published   Boolean   @default(false)
  createdAt   DateTime  @default(now())
  publishedAt DateTime?
  updatedAt   DateTime  @updatedAt

  @@id([locale, postId])
}

model Post {
  id          Int           @id @default(autoincrement())
  content     PostLocaled[]
  seriesId    Int?
  series      Series?       @relation(fields: [seriesId], references: [id], onDelete: Cascade)
  published   Boolean       @default(false)
  createdAt   DateTime      @default(now())
  publishedAt DateTime?
  updatedAt   DateTime      @updatedAt

  tag Post__Tag[]

  comments        Comment[]
  historyComments CommentDelta[]

  views       Int         @default(0)
  viewHistory ViewDelta[]
}

model ViewDelta {
  id          Int      @id @default(autoincrement())
  inc_num     Int
  recordStart DateTime @default(now())
  lastRecord  DateTime @updatedAt

  postId Int
  post   Post @relation(fields: [postId], references: [id], onDelete: Cascade)
}

model SeriesLocaled {
  locale   Locale
  seriesId Int
  series   Series @relation(fields: [seriesId], references: [id], onDelete: Cascade)

  title       String
  description String

  @@id([locale, seriesId])
}

model Series {
  id          Int               @id @default(autoincrement())
  createdAt   DateTime          @default(now())
  updatedAt   DateTime          @updatedAt
  published   Boolean           @default(false)
  publishedAt DateTime?
  views       Int               @default(0)
  viewsDelta  SeriesViewDelta[]

  content SeriesLocaled[]
  posts   Post[]
  tag     Series__Tag[]
}

model SeriesViewDelta {
  id          Int      @id @default(autoincrement())
  inc_num     Int
  recordStart DateTime @default(now())
  lastRecord  DateTime @updatedAt

  seriesId Int
  series   Series @relation(fields: [seriesId], references: [id], onDelete: Cascade)
}

model Session {
  id String @id @default(cuid())
}

model TagLocaled {
  locale Locale
  tagId  Int
  tag    Tag    @relation(fields: [tagId], references: [id], onDelete: Cascade)

  name String @unique

  @@id([locale, tagId])
}

model Tag {
  id      Int           @id @default(autoincrement())
  content TagLocaled[]
  posts   Post__Tag[]
  series  Series__Tag[]
}

model Post__Tag {
  tagId  Int
  tag    Tag  @relation(fields: [tagId], references: [id], onDelete: Cascade)
  postId Int
  post   Post @relation(fields: [postId], references: [id], onDelete: Cascade)

  @@id([tagId, postId])
}

model Series__Tag {
  tagId    Int
  tag      Tag    @relation(fields: [tagId], references: [id], onDelete: Cascade)
  seriesId Int
  series   Series @relation(fields: [seriesId], references: [id], onDelete: Cascade)

  @@id([tagId, seriesId])
}

model Comment {
  id              String   @id @default(cuid())
  name            String
  password        String
  message         String
  // isUpdated    createdAt !== updatedAt
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  parentCommentId String?

  locale Locale

  postId Int
  post   Post @relation(fields: [postId], references: [id], onDelete: Cascade)
}

model CommentDelta {
  id          Int      @id @default(autoincrement())
  inc_num     Int
  recordStart DateTime @default(now())
  lastRecord  DateTime @updatedAt

  postId Int
  post   Post @relation(fields: [postId], references: [id], onDelete: Cascade)
}
